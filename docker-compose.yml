version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: anatome-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: anatome-ai
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - anatome-network

  redis:
    image: redis:7-alpine
    container_name: anatome-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - anatome-network

  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: anatome-api-gateway
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      MONGODB_URI: mongodb://admin:password@mongodb:27017/anatome-ai?authSource=admin
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:8080}
      RATE_LIMIT_WINDOW: ${RATE_LIMIT_WINDOW:-15}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-100}
    depends_on:
      - mongodb
      - redis
      - user-management
      - business-discovery
      - instagram-detection
      - job-queue
    networks:
      - anatome-network

  user-management:
    build:
      context: ./services/user-management
      dockerfile: Dockerfile
    container_name: anatome-user-management
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: development
      PORT: 3002
      MONGODB_URI: mongodb://admin:password@mongodb:27017/anatome-ai?authSource=admin
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-your-super-secret-refresh-key-change-in-production}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-15m}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-7d}
    depends_on:
      - mongodb
      - redis
    networks:
      - anatome-network

  business-discovery:
    build:
      context: ./services/business-discovery
      dockerfile: Dockerfile
    container_name: anatome-business-discovery
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      MONGODB_URI: mongodb://admin:password@mongodb:27017/anatome-ai?authSource=admin
      REDIS_HOST: redis
      REDIS_PORT: 6379
      SERPER_API_KEY: ${SERPER_API_KEY:-your-serper-api-key}
      DEFAULT_DISCOVERY_RADIUS: ${DEFAULT_DISCOVERY_RADIUS:-50}
      MAX_DISCOVERY_RADIUS: ${MAX_DISCOVERY_RADIUS:-100}
      INSTAGRAM_SERVICE_URL: http://instagram-detection:3003
    depends_on:
      - mongodb
      - redis
    networks:
      - anatome-network

  instagram-detection:
    build:
      context: ./services/instagram-detection
      dockerfile: Dockerfile
    container_name: anatome-instagram-detection
    restart: unless-stopped
    ports:
      - "3003:3003"
    environment:
      NODE_ENV: development
      PORT: 3003
      MONGODB_URI: mongodb://admin:password@mongodb:27017/anatome-ai?authSource=admin
      REDIS_HOST: redis
      REDIS_PORT: 6379
      SERPER_API_KEY: ${SERPER_API_KEY:-your-serper-api-key}
      INSTAGRAM_SESSION_FILE: ./sessions/instagram_session.json
      TOP_REELS_COUNT: ${TOP_REELS_COUNT:-10}
      DETECTION_RATE_LIMIT: ${DETECTION_RATE_LIMIT:-5}
      SEARCH_RATE_LIMIT: ${SEARCH_RATE_LIMIT:-10}
      VALIDATION_RATE_LIMIT: ${VALIDATION_RATE_LIMIT:-20}
      PYTHON_SCRIPT_TIMEOUT: ${PYTHON_SCRIPT_TIMEOUT:-120000}
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./sessions:/app/sessions
      - ./temp:/app/temp
    networks:
      - anatome-network

  video-scraping:
    build:
      context: ./services/video-scraping
      dockerfile: Dockerfile
    container_name: anatome-video-scraping
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      MONGODB_URI: mongodb://admin:password@mongodb:27017/anatome-ai?authSource=admin
      REDIS_HOST: redis
      REDIS_PORT: 6379
      # Backblaze B2 (S3-compatible)
      B2_ENDPOINT_URL: ${B2_ENDPOINT_URL:-https://s3.us-west-002.backblazeb2.com}
      B2_BUCKET_NAME: ${B2_BUCKET_NAME:-anatome-ai-videos}
      B2_ACCESS_KEY_ID: ${B2_ACCESS_KEY_ID:-your-b2-access-key}
      B2_SECRET_ACCESS_KEY: ${B2_SECRET_ACCESS_KEY:-your-b2-secret-key}
      B2_REGION: ${B2_REGION:-us-west-002}
      # Video Download Limits
      MAX_VIDEOS_FREE: ${MAX_VIDEOS_FREE:-50}
      MAX_VIDEOS_PRO: ${MAX_VIDEOS_PRO:-200}
      MAX_VIDEOS_ENTERPRISE: ${MAX_VIDEOS_ENTERPRISE:-1000}
      # Instagram Settings
      INSTAGRAM_SESSION_FILE: ./sessions/instagram_session.json
      PROXY_LIST: ${PROXY_LIST:-}
      USE_PROXY: ${USE_PROXY:-false}
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./sessions:/app/sessions
      - ./temp:/app/temp
    networks:
      - anatome-network

  # Note: The following services are not yet implemented
  # Uncomment and configure when ready:
  
  # video-analysis:
  #   build:
  #     context: ./services/video-analysis
  #     dockerfile: Dockerfile
  #   container_name: anatome-video-analysis
  #   restart: unless-stopped
  #   ports:
  #     - "3005:3005"
  #   environment:
  #     NODE_ENV: development
  #     PORT: 3005
  #     MONGODB_URI: mongodb://admin:password@mongodb:27017/anatome-ai?authSource=admin
  #     REDIS_HOST: redis
  #     REDIS_PORT: 6379
  #     OPENROUTER_API_KEY: ${OPENROUTER_API_KEY:-your-openrouter-api-key}
  #     OPENROUTER_MODEL: ${OPENROUTER_MODEL:-openai/gpt-5-nano}
  #   depends_on:
  #     - mongodb
  #     - redis
  #   networks:
  #     - anatome-network

  # report-generation:
  #   build:
  #     context: ./services/report-generation
  #     dockerfile: Dockerfile
  #   container_name: anatome-report-generation
  #   restart: unless-stopped
  #   ports:
  #     - "3006:3006"
  #   environment:
  #     NODE_ENV: development
  #     PORT: 3006
  #     MONGODB_URI: mongodb://admin:password@mongodb:27017/anatome-ai?authSource=admin
  #     REDIS_HOST: redis
  #     REDIS_PORT: 6379
  #     OPENROUTER_API_KEY: ${OPENROUTER_API_KEY:-your-openrouter-api-key}
  #     OPENROUTER_MODEL: ${OPENROUTER_MODEL:-openai/gpt-5-nano}
  #   depends_on:
  #     - mongodb
  #     - redis
  #   networks:
  #     - anatome-network

  job-queue:
    build:
      context: ./services/job-queue
      dockerfile: Dockerfile
    container_name: anatome-job-queue
    restart: unless-stopped
    ports:
      - "3009:3009"
    environment:
      NODE_ENV: development
      PORT: 3009
      MONGODB_URI: mongodb://admin:password@mongodb:27017/anatome-ai?authSource=admin
      REDIS_HOST: redis
      REDIS_PORT: 6379
      # Service URLs for job processors
      BUSINESS_DISCOVERY_SERVICE_URL: http://business-discovery:3001
      INSTAGRAM_SERVICE_URL: http://instagram-detection:3003
      VIDEO_SCRAPING_SERVICE_URL: http://video-scraping:8000
      VIDEO_ANALYSIS_SERVICE_URL: http://video-analysis:3005
      REPORT_SERVICE_URL: http://report-generation:3006
      # Job Configuration
      DEFAULT_JOB_ATTEMPTS: ${DEFAULT_JOB_ATTEMPTS:-3}
      DEFAULT_JOB_DELAY: ${DEFAULT_JOB_DELAY:-0}
      MAX_CONCURRENT_JOBS: ${MAX_CONCURRENT_JOBS:-10}
      CLEANUP_INTERVAL_HOURS: ${CLEANUP_INTERVAL_HOURS:-24}
      HEALTH_CHECK_INTERVAL_MINUTES: ${HEALTH_CHECK_INTERVAL_MINUTES:-5}
    depends_on:
      - mongodb
      - redis
    networks:
      - anatome-network

networks:
  anatome-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data: